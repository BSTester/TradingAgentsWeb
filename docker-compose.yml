version: '3.8'

services:
  # 后端服务 (FastAPI)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: tradingagents-backend
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - DATABASE_URL=sqlite:///./tradingagents.db
    volumes:
      # 挂载配置文件
      - ./.env:/app/.env
      # 挂载数据库（持久化）
      - ./tradingagents.db:/app/tradingagents.db
      # 挂载评估结果（持久化）
      - ./eval_results:/app/eval_results
    restart: unless-stopped
    networks:
      - tradingagents-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端服务 (Next.js)
  frontend:
    build:
      context: ./web/frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
    container_name: tradingagents-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://backend:8000
      - NODE_ENV=production
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - tradingagents-network

  # 可选：Nginx 反向代理
  # nginx:
  #   image: nginx:alpine
  #   container_name: tradingagents-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - backend
  #     - frontend
  #   restart: unless-stopped
  #   networks:
  #     - tradingagents-network

  # 可选：Redis 服务（如果需要缓存）
  # redis:
  #   image: redis:7-alpine
  #   container_name: tradingagents-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   restart: unless-stopped
  #   networks:
  #     - tradingagents-network

networks:
  tradingagents-network:
    driver: bridge

# volumes:
#   redis-data:
